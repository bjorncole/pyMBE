[project]
name = "pymbe"
requires-python = ">=3.11"
description = "A pythonic Model-based Engineering framework based on SysML v2"
version = "0.20.0"
license = { file = "LICENSE" }
keywords = ["Model-based", "SysML", "Engineering"]
authors = [
  { name = "Bjorn Cole", email = "bjorn.cole@gmail.com" },
  { name = "Santiago Balestrini-Robinson", email = "sanbales@gmail.com" },
]
maintainers = [
  { name = "Bjorn Cole", email = "bjorn.cole@gmail.com" },
  { name = "Santiago Balestrini-Robinson", email = "sanbales@gmail.com" },
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3) ",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "importnb",
    "ipyelk",
    "ipytree",
    "jupyterlab",
    "matplotlib",
    "networkx",
    "notebook",
    "numpy",
    "openmdao",
    "pyld",
    "rdflib",
    "rdflib-jsonld",
    "ruamel.yaml",
    "tabulate",
    "wxyz_html",
    "wxyz_lab",
]

[project.urls]
homepage = "https://github.com/bjorncole/pymbe"
bug-tracker = "https://github.com/bjorncole/pymbe/issues"
changelog = "https://github.com/bjorncole/pymbe/blob/master/CHANGELOG.md"
releases = "https://github.com/bjorncole/pymbe/releases"
source = "https://github.com/bjorncole/pymbe"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tool.pixi.feature.develop.dependencies]
ansi2html = "*"
git = "*"
mypy = "*"
nbstripout = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-html = "*"
pytest-xdist = "*"
python-build = "*"
ruff = "*"

[tool.pixi.environments]
runtime = { features = [], solve-group = "default" }
develop = { features = ["develop"], solve-group = "runtime" }

[tool.pixi.tasks]
setup = { cmd = "pip install -e .", inputs=[".pixi/envs/runtime/conda-meta/history"] }
lab = { cmd = "jupyter lab --no-browser", depends-on = ["setup"], cwd = "docs" }

[tool.pixi.feature.develop.tasks]
clean-notebooks = "nbstripout docs/**/*.ipynb"
fmt = "ruff format src/ tests/"
lint = "ruff check --fix --no-unsafe-fixes src/ tests/"
precommit = { depends-on = ["style", "typing", "test", "clean-notebooks"] }
setup-develop = { cmd = "pip install -e .", inputs=[".pixi/envs/develop/conda-meta/history"] }
setup-mypy = "mypy --install-types"
style = { depends-on = ["fmt", "lint"] }
test = { cmd = "pytest -s -n 4 --cov=pymbe --cov-report html:.pytest_coverage", depends-on = ["setup-develop", "update-submodules"] }
typing = { cmd = "mypy src/", depends-on = ["setup-mypy"] }
update-submodules = { cmd = "git submodule update --init", inputs=[".git/HEAD"] }
package = "python -m build --sdist"
wheel = "python -m build --wheel"
vscode = "code ."

[tool.ruff.lint]
extend-select = ["I"]

[tool.mypy]
ignore_missing_imports = true

[tool.pytest]
log_cli = false
log_cli_level = "DEBUG"
junit_family = "xunit2"
addopts = [
    "-vv",
    "--ff",
    "--pyargs pymbe",
    "--cov pymbe",
    "--cov-report term-missing:skip-covered",
    "--cov-report html:build/htmlcov",
    "--cov-report xml:build/cov.xml",
    "--html build/pytest.html",
    "--self-contained-html",
    "--junitxml build/pytest.xunit.xml",
]
