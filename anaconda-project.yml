name: pymbe

#
# Set the 'icon' key to give your project an icon
#
icon:

description: |
  A pythonic Model-based Engineering analysis framework based on SysML v2.

#
# In the commands section, list your runnable scripts, notebooks, and other code.
# Use `anaconda-project add-command` to add commands.
#
commands:
  lab:
    description: launch lab
    env_spec: developer
    unix: &lab jupyter lab --no-browser --debug
    windows: *lab
  setup:
    description: setup development environment
    env_spec: developer
    unix: |
      git submodule update --init
      pip install ipyelk --no-dependencies
      pip install git+https://github.com/Systems-Modeling/SysML-v2-API-Python-Client.git --no-dependencies
      pip install -e . --no-dependencies
    windows: |
      git submodule update --init & pip install ipyelk --no-dependencies & pip install git+https://github.com/Systems-Modeling/SysML-v2-API-Python-Client.git --no-dependencies & pip install -e . --no-dependencies
  lint:
    description: lint the code
    env_spec: developer
    unix: |
      isort .
      black src/
    windows: python isort . & python black .
  package:
    description: make a source distribution
    env_spec: developer
    unix: python setup.py sdist
    windows: python setup.py sdist
  test:
    description: run the tests
    env_spec: developer
    unix: py.test tests/
    windows: py.test tests/
  notebooks/Tutorial.ipynb:
    env_spec: user
    notebook: notebooks/Tutorial.ipynb

#
# In the variables section, list any environment variables your code depends on.
# Use `anaconda-project add-variable` to add variables.
#
variables: {}

#
# In the services section, list any services that should be
# available before your code runs.
# Use `anaconda-project add-service` to add services.
#
services: {}

#
# In the downloads section, list any URLs to download to local files
# before your code runs.
# Use `anaconda-project add-download` to add downloads.
#
downloads: {}

#
# In the packages section, list any packages that must be installed
# before your code runs.
# Use `anaconda-project add-packages` to add packages.
#
packages: []

#
# In the channels section, list any Conda channel URLs to be searched
# for packages.
#
# For example,
#
# channels:
#    - mychannel
#
channels:
- conda-forge
- nodefaults 

#
# In the platforms section, list platforms the project should work on
# Examples: "linux-64", "osx-64", "win-64"
# Use `anaconda-project add-platforms` to add platforms.
#
platforms:
- linux-64
- osx-64
- win-64

#
# You can define multiple, named environment specs.
# Each inherits any global packages or channels,
# but can have its own unique ones also.
# Use `anaconda-project add-env-spec` to add environment specs.
#
env_specs:
  user:
    description: The environment for running the notebooks
    packages:
    # - ipyelk >=2.0,<3
    - ipytree >=0.2.1,<1
    - jupyterlab >=3.0,<4
    - matplotlib
    - networkx >=2.0,<3
    - notebook
    - numpy
    - openmdao >=3.0,<4
    - pyld
    - rdflib
    - rdflib-jsonld
    - ruamel.yaml
    - tabulate
    - wxyz_lab
  developer:
    description: The environment for developing pymbe
    inherit_from:
    - user
    packages:
    - black
    - coverage
    - doit
    - git
    - isort
    - pip
    - pytest
    - pytest-asyncio
    - pytest-cov
    - pytest-html
    - pytest-xdist
    - wheel
